const express = require('express');
const path = require('path');
const bodyParser = require('body-parser');
const mongoose = require('mongoose');
const app = express();
const port = 3012;
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

mongoose.connect('mongodb://localhost:27017/GymArticles')
.then(() => {
  console.log("MongoDB connected successfully");
}).catch(()=>{
  console.log("Error while connecting to MongoDB");
})

const userSchema = new mongoose.Schema({
  Name: String,
  Email: String,
  Password: String
});

const User = mongoose.model('user', userSchema);


app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'HomePage.html'));
});
app.get('/login', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'LoginPage.html')); 
})

app.get('/signup', (req, res) => {
  res.sendFile(path.join(__dirname, 'public','SignUpPage.html'))
})
app.post('/signup', async (req, res) => {
  try {
      const { name, email, password, confirmPassword } = req.body;

      if (password !== confirmPassword) {
          return res.status(400).send('Parola și confirmarea parolei nu coincid.');
      }

      const newUser = new User({ name, email, password });
      await newUser.save();
      res.send('Utilizatorul a fost înregistrat cu succes!');
  } catch (error) {
      res.status(500).send('Eroare la înregistrare!');
  }
});
app.get('/reset', (req, res) => {
  res.sendFile(path.join(__dirname, 'public',"ResetPassword.html"))
})
app.get('/product', (req, res) => {
  res.sendFile(path.join(__dirname, 'public',"Product.html"))
})
app.listen(port, ()=> console.log(`Server is running at http://localhost:${port}`)); 